Assignment - 3 (Is it Armstrong Number?)
ğŸ’¡Objective:
To improve your control flow statement and arithmetic operator algorithm skills.
Write your Python codes on any IDE, push it up to your GitHub repository and submit your GitHub Page link address in addition to your code as a plain text.
 
Task:

Find out if a given number is an "Armstrong Number".

An n-digit number that is the sum of the nth powers of its digits is called an n-Armstrong number. Examples :
371 = 33 + 73 + 13;
9474 = 94 + 44 + 74 + 44;
93084 = 95 + 35 + 05 + 85 + 45.

Write a Python program that;
takes a positive integer number from the user,
checks the entered number if it is Armstrong,
consider the negative, float and any entries other than numeric values then display a warning message to the user.

Examples
Sample inputs	Outputs
407	407 is an Armstrong number
5	5 is an Armstrong number
 -153	 It is an invalid entry. Don't use non-numeric, float, or negative values!
 153.87 or 153,87	 It is an invalid entry. Don't use non-numeric, float, or negative values!
 one	 It is an invalid entry. Don't use non-numeric, float, or negative values!
 121	 121 is not an Armstrong number

Note that; this question is famous on the web, so that do it yourself to get more benefits from it. By the way, do not use try - except block.



Ã–dev - 3 (Armstrong NumarasÄ± mÄ±?)
ğŸ’¡Objective:
Senin geliÅŸtirmek iÃ§in kontrol akÄ±ÅŸ tablosu ve aritmetik operatÃ¶r algoritmasÄ±  becerileri.
Python kodlarÄ±nÄ±zÄ± herhangi bir IDE'ye yazÄ±n, GitHub  deponuza itin  ve  kodunuza ek olarak GitHub SayfasÄ±  baÄŸlantÄ± adresinizi dÃ¼z metin olarak gÃ¶nderin  .
 
GÃ¶rev:

Belirli bir sayÄ±nÄ±n " Armstrong NumarasÄ± " olup olmadÄ±ÄŸÄ±nÄ± Ã¶ÄŸrenin .

Bir n toplamÄ± olan basamaklÄ± sayÄ± n de basamak gÃ¼Ã§leri inci bir denir , n-Armstrong sayÄ±sÄ±. Ã–rnekler:
371 = 3 +  7 3 + 1 3 ;
9474 = 9 4 + 4 4 + 7 4 + 4 ;
93084 = 9 5 + 3 5 + 0 5 + 8 5 + 4 5 .

Bir Python programÄ± yazÄ±n;
kullanÄ±cÄ±dan pozitif bir tam sayÄ± alÄ±r,
Armstrong ise girilen numarayÄ± kontrol eder,
negatif, kayan nokta ve sayÄ±sal deÄŸerler dÄ±ÅŸÄ±ndaki tÃ¼m girdileri dikkate alÄ±n, ardÄ±ndan kullanÄ±cÄ±ya bir uyarÄ± mesajÄ± gÃ¶rÃ¼ntÃ¼leyin.

Ã–rnekler
Ã–rnek giriÅŸler	Ã§Ä±ktÄ±lar
407	407 bir Armstrong numarasÄ±dÄ±r
5	5 bir Armstrong numarasÄ±dÄ±r
 -153	 GeÃ§ersiz bir giriÅŸ. SayÄ±sal olmayan, kayan nokta veya negatif deÄŸerler kullanmayÄ±n!
 153.87 veya 153.87	 GeÃ§ersiz bir giriÅŸ. SayÄ±sal olmayan, kayan nokta veya negatif deÄŸerler kullanmayÄ±n!
 bir	 GeÃ§ersiz bir giriÅŸ. SayÄ±sal olmayan, kayan nokta veya negatif deÄŸerler kullanmayÄ±n!
 121	 121 bir Armstrong numarasÄ± deÄŸil

UnutmayÄ±n ; Bu soru web'de Ã¼nlÃ¼dÃ¼r, bu yÃ¼zden daha fazla fayda elde etmek iÃ§in kendiniz yapÄ±n. Bu arada, try - block hariÃ§ kullanmayÄ±n .


while True:
    number = input('enter a positive number : ')
    digits = len(number)
    summ =0
    if not number.isdigit() :
        print(number," It is an invalid entry. Don't use non-numeric, float, or negative values!")
    elif int(number) >= 0:
        for i in range(digits):
            summ += int(number[i]) ** digits
        if summ == int(number):
            print(number, 'is an Armstrong number.')
            break
        else:
            print(number, 'is not an Armstrong number')
            break

# https://github.com/be1907/python_assignment.git
